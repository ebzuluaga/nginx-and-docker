worker_processes 1;
events {
    worker_connections 1024;
}
http { # define how to handle http requests
	include mime.types; # in the response, include the mime type of the served file
	upstream nodejs_cluster {
		least_conn; # forward traffic to the server with least connections instead of using a round-robin algorithm
		server 127.0.0.1:3001;
		server 127.0.0.1:3002;
		server 127.0.0.1:3003;
	}
	server {
		listen 443 ssl;
		server_name localhost; # where the client is sending the requests to
		ssl_certificate     /home/abi/Documents/projects/site/nginx/selfsigned.crt ;
		ssl_certificate_key /home/abi/Documents/projects/site/nginx/selfsigned.key ;
		location / {
			proxy_pass http://nodejs_cluster; # pass the request to another server, in this case, our already defined nodejs_cluster upstream
			proxy_set_header Host $host; # when forwarding, set the client's Host header
			proxy_set_header X-Real-IP $remote_addr; # Set the X-Real-IP header to the client's actual ip address
		}
	}
	server {
		listen 80;
		server_name localhost;
		location / {
			return 301 https://$host$request_uri;
		}
	}
}